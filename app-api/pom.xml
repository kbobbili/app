<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>app-api</artifactId>
  <packaging>jar</packaging>
  <description>App API</description>

  <parent>
    <groupId>com.kalbob</groupId>
    <artifactId>app</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <relativePath>..</relativePath>
  </parent>

  <properties>
    <docker.port>8090</docker.port>
    <!-- default to us-east-1 -->
    <aws.environment>dev</aws.environment>
    <aws.region>us-east-1</aws.region>
  </properties>

  <dependencies>
    <!-- rest -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-hateoas</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <version>${spring-boot.version}</version>
    </dependency>

    <!-- service -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-quartz</artifactId>
    </dependency>

    <!-- data -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-mongodb</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-redis</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-rest</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-rest-hal-browser</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
    </dependency>

    <!-- app-client -->
    <dependency>
      <groupId>com.kalbob</groupId>
      <artifactId>app-client</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>com.kalbob</groupId>
      <artifactId>app-client</artifactId>
      <version>${project.parent.version}</version>
      <type>test-jar</type>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>jib-to-aws</id>
      <build>
        <resources>
          <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
          </resource>
        </resources>
        <plugins>
          <plugin>
            <groupId>com.google.cloud.tools</groupId>
            <artifactId>jib-maven-plugin</artifactId>
            <version>${jib-maven-plugin.version}</version>
            <configuration>
              <from>
                <image>docker.io/adoptopenjdk/openjdk11-openj9:slim</image>
                <auth>
                  <username>kalyan27</username>
                  <password>Kalbob@27</password>
                </auth>
              </from>
              <to>
                <image>docker.io/kalyan27/app-api-${aws.environment}:${project.version}</image>
                <auth>
                  <username>kalyan27</username>
                  <password>Kalbob@27</password>
                </auth>
              </to>
              <allowInsecureRegistries>true</allowInsecureRegistries>
              <container>
                <jvmFlags>
                  <jvmFlag>-Djava.security.egd=file:/dev/./urandom</jvmFlag>
                </jvmFlags>
                <ports>
                  <port>8090</port>
                </ports>
              </container>
            </configuration>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>build</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>jib-to-local</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.google.cloud.tools</groupId>
            <artifactId>jib-maven-plugin</artifactId>
            <version>${jib-maven-plugin.version}</version>
            <configuration>
              <from>
                <image>docker.io/adoptopenjdk/openjdk11-openj9:slim</image>
                <auth>
                  <username>kalyan27</username>
                  <password>Kalbob@27</password>
                </auth>
              </from>
              <to>
                <image>docker.io/kalyan27/app-api-local:v18</image>
              </to>
              <allowInsecureRegistries>true</allowInsecureRegistries>
              <container>
                <jvmFlags>
                  <jvmFlag>-Djava.security.egd=file:/dev/./urandom</jvmFlag>
                </jvmFlags>
                <ports>
                  <port>8090</port>
                </ports>
              </container>
            </configuration>
            <executions>
              <execution>
                <phase>compile</phase>
                <goals>
                  <goal>dockerBuild</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-help-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

</project>
